pipeline {
    agent any

    parameters {
        choice(name: 'targetEnvironment', choices: 'main\ndev', description: 'Select the target environment: main or dev')
        string(name: 'imageTag', defaultValue: 'v1.0', description: 'Enter the Docker image tag to deploy')
    }

    stages {
        stage('Build Docker Image') {
            when {
                expression { currentBuild.parameters.targetEnvironment != null }
            }
            steps {
                script {
                    def targetEnvironment = currentBuild.parameters.targetEnvironment
                    def imageTag = currentBuild.parameters.imageTag
                    def imageName

                    echo "Building Docker image for $targetEnvironment environment with tag: $imageTag"

                    if (targetEnvironment == 'main') {
                        imageName = "nodemain:$imageTag"
                    } else if (targetEnvironment == 'dev') {
                        imageName = "nodedev:$imageTag"
                    } else {
                        error "Invalid target environment: $targetEnvironment"
                    }

                    // Build the Docker image with the determined image name
                    sh "sudo docker build -t $imageName ."
                }
            }
        }

        stage('Run Docker Container') {
            when {
                expression { currentBuild.parameters.targetEnvironment != null }
            }
            steps {
                script {
                    def targetEnvironment = currentBuild.parameters.targetEnvironment
                    def imageTag = currentBuild.parameters.imageTag

                    echo "Running Docker container for $targetEnvironment environment with image tag: $imageTag"

                    if (targetEnvironment == 'main') {
                        // Run Docker container for 'main' branch
                        sh "sudo docker run -d --expose 3000 -p 3000:3000 nodemain:$imageTag"
                    } else if (targetEnvironment == 'dev') {
                        // Run Docker container for 'dev' branch
                        sh "sudo docker run -d --expose 3001 -p 3001:3000 nodedev:$imageTag"
                    } else {
                        error "Invalid target environment: $targetEnvironment"
                    }
                }
            }
        }
    }
}
